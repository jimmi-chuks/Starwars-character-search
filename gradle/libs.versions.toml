[versions]
agp = "8.4.0-alpha12"
lifecycle = "2.6.2"
coroutine = "1.7.3"
kotlin = "1.9.20"
androidDesugarJdkLibs = "2.0.4"
androidGradle = "7.2.2"
## androidGradle="7.4.0-alpha01"
room = "2.6.1"
dagger = "2.49"
javaxAnnotation = "1.0"
retrofit = "2.9.0"
retrofitKotlinxSerializationJson = "1.0.0"
okhttp3LoggingInterceptor = "4.12.0"
androidXCore = "1.12.0"
fragmentKtx = "1.6.2"
activity = "1.8.1"
appCompat = "1.6.1"
material = "1.10.0"
compose = "1.5.4" # ensure it matches version specified in Dependnecies.kt defined in buildsrc
composeBom = "2023.10.01"
composeNavigation = "2.7.6"
composeMaterial3 = "1.1.2"
composeFonts = "1.5.4"
recyclerView = "1.3.2"
constraintLayout = "2.1.4"
junit = "4.+"
androidTestJunit = "1.1.5"
espressoCore = "3.5.1"
androidTest = "1.5.2"
androidTestCore = "1.5.0"
androidTestRules = "1.5.0"
androidTestRunner = "1.5.2"
androidxArchCore = "2.2.0"
mockito = "5.8.0"
mockitoKotlin = "4.0.0"
mockitoAndroid = "4.5.1"
arrow = "1.2.0"

kotlinxSerializationJson = "1.6.2"
turbine = "1.0.0"
ktor_version= "2.3.7"

androidTools = "31.2.0"
androidCompileSdk = "34"
androidTargetSdk = "33"
androidMinSdk = "24"
composeCompilerVersion = "1.5.4"
jvmTarget = "17"

[libraries]
livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }

coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutine" }

room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-test = { module = "androidx.room:room-testing", version.ref = "room" }

dagger-core = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
javaxAnnotation = { module = "javax.annotation:jsr250-api", version.ref = "javaxAnnotation" }

android-desugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarJdkLibs" }

android-gradle = { module = "com.android.tools.build:gradle", version.ref = "androidGradle" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }

androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidXCore" }
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
androidx-recyclerView = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerView" }
androidx-appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
androidx-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }

material = { module = "com.google.android.material:material", version.ref = "material" }

compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-ui-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-runtime = { module = "androidx.compose.runtime:runtime",  version.ref = "compose"  }
compose-material3-core = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial3" }
compose-material3-window-size = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "composeMaterial3" }
compose-fonts = { module = "androidx.compose.ui:ui-text-google-fonts", version.ref = "composeFonts" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "activity" }
compose-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
compose-uiTest = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
compose-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }

retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-kotlin-serialization = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofitKotlinxSerializationJson" }
loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3LoggingInterceptor" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }

arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-fx-stm = { module = "io.arrow-kt:arrow-fx-stm", version.ref = "arrow" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }

android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }


test-androidx-core = { module = "androidx.test:core", version.ref = "androidTestCore" }
test-androidx-archCore = { module = "androidx.arch.core:core-testing", version.ref = "androidxArchCore" }
test-androidx-runner = { module = "androidx.test:runner", version.ref = "androidTestRunner" }
test-androidx-rules = { module = "androidx.test:rules", version.ref = "androidTestRules" }
test-androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidTestJunit" }
test-junit = { module = "junit:junit", version.ref = "junit" }
test-mockitoCore = { module = "org.mockito:mockito-core", version.ref = "mockito" }
test-espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
test-mockitoKotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
test-mockitoAndroid = { module = "org.mockito:mockito-android", version.ref = "mockitoAndroid" }

turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }

[bundles]
lifecycleBundle = ["livedata", "viewmodel"]
uiBundle = [
    "androidx-core",
    "androidx-fragment",
    "androidx-recyclerView",
    "androidx-appCompat",
    "androidx-constraintLayout",
    "material"
]
composeUiBundle = [
    "compose-ui-ui",
    "compose-ui-tooling",
    "compose-ui-tooling-preview",
    "compose-foundation",
    "compose-runtime",
    "compose-material3-window-size",
    "compose-material3-core",
    "compose-activity",
    "compose-viewmodel",
    "compose-navigation",
    "compose-fonts"
]
arrowBundle = ["arrow-core", "arrow-fx-stm", "arrow-fx-coroutines"]
tests = [
    "test-androidx-core",
    "test-androidx-archCore",
    "test-androidx-runner",
    "test-androidx-rules",
    "test-androidx-junit",
    "test-junit",
    "test-espressoCore",
    "turbine"
]
coroutineAndroid = ["coroutines-android", "coroutines-core"]
room = ["room-ktx", "room-runtime", "room-compiler"]
retrofit = ["retrofit-core", "retrofit-kotlin-serialization", "loggingInterceptor"]
unitTest = ["test-junit", "test-mockitoCore", "test-androidx-archCore", "coroutines-test"]
androidTest = [
    "test-androidx-rules",
    "test-androidx-runner",
    "test-androidx-junit",
    "test-androidx-core",
    "test-androidx-archCore",
    "coroutines-test",
    "test-espressoCore",
    "turbine"
]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

starwars-android-compose-application = { id = "starwars.android.applicationCompose", version = "unspecified" }
starwars-android-compose-library = { id = "starwars.android.libraryCompose", version = "unspecified" }
starwars-android-library = { id = "starwars.android.library", version = "unspecified" }
